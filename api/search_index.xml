<?xml version="1.0"?>
<nodes><node><value>\Vo\Mac</value><id>_Mac.html#\Vo\Mac</id><type>class</type></node><node><value>\Vo\Mac::$mac</value><id>_Mac.html#\Vo\Mac::$mac</id><type>property</type></node><node><value>\Vo\Mac::__construct()</value><id>_Mac.html#\Vo\Mac::__construct()</id><type>method</type></node><node><value>\Vo\Mac::format()</value><id>_Mac.html#\Vo\Mac::format()</id><type>method</type></node><node><value>\Vo\Mac::__toString()</value><id>_Mac.html#\Vo\Mac::__toString()</id><type>method</type></node><node><value>\Vo\Money</value><id>_Money.html#\Vo\Money</id><type>class</type></node><node><value>\Vo\Money::$amount</value><id>_Money.html#\Vo\Money::$amount</id><type>property</type></node><node><value>\Vo\Money::$currency</value><id>_Money.html#\Vo\Money::$currency</id><type>property</type></node><node><value>\Vo\Money::$formatter</value><id>_Money.html#\Vo\Money::$formatter</id><type>property</type></node><node><value>\Vo\Money::$scale</value><id>_Money.html#\Vo\Money::$scale</id><type>property</type></node><node><value>\Vo\Money::$defaultFormatter</value><id>_Money.html#\Vo\Money::$defaultFormatter</id><type>property</type></node><node><value>\Vo\Money::$defaultScale</value><id>_Money.html#\Vo\Money::$defaultScale</id><type>property</type></node><node><value>\Vo\Money::setDefaultFormatter()</value><id>_Money.html#\Vo\Money::setDefaultFormatter()</id><type>method</type></node><node><value>\Vo\Money::setDefaultScale()</value><id>_Money.html#\Vo\Money::setDefaultScale()</id><type>method</type></node><node><value>\Vo\Money::getDefaultFormatter()</value><id>_Money.html#\Vo\Money::getDefaultFormatter()</id><type>method</type></node><node><value>\Vo\Money::getDefaultScale()</value><id>_Money.html#\Vo\Money::getDefaultScale()</id><type>method</type></node><node><value>\Vo\Money::__construct()</value><id>_Money.html#\Vo\Money::__construct()</id><type>method</type></node><node><value>\Vo\Money::getAmount()</value><id>_Money.html#\Vo\Money::getAmount()</id><type>method</type></node><node><value>\Vo\Money::getCurrency()</value><id>_Money.html#\Vo\Money::getCurrency()</id><type>method</type></node><node><value>\Vo\Money::getFormatter()</value><id>_Money.html#\Vo\Money::getFormatter()</id><type>method</type></node><node><value>\Vo\Money::getScale()</value><id>_Money.html#\Vo\Money::getScale()</id><type>method</type></node><node><value>\Vo\Money::setFormatter()</value><id>_Money.html#\Vo\Money::setFormatter()</id><type>method</type></node><node><value>\Vo\Money::setScale()</value><id>_Money.html#\Vo\Money::setScale()</id><type>method</type></node><node><value>\Vo\Money::add()</value><id>_Money.html#\Vo\Money::add()</id><type>method</type></node><node><value>\Vo\Money::div()</value><id>_Money.html#\Vo\Money::div()</id><type>method</type></node><node><value>\Vo\Money::mul()</value><id>_Money.html#\Vo\Money::mul()</id><type>method</type></node><node><value>\Vo\Money::sub()</value><id>_Money.html#\Vo\Money::sub()</id><type>method</type></node><node><value>\Vo\Money::round()</value><id>_Money.html#\Vo\Money::round()</id><type>method</type></node><node><value>\Vo\Money::format()</value><id>_Money.html#\Vo\Money::format()</id><type>method</type></node><node><value>\Vo\Money::__toString()</value><id>_Money.html#\Vo\Money::__toString()</id><type>method</type></node><node><value>\Vo\Money::assertAndConvertValidMoney()</value><id>_Money.html#\Vo\Money::assertAndConvertValidMoney()</id><type>method</type></node><node><value>\Vo\Money::operation()</value><id>_Money.html#\Vo\Money::operation()</id><type>method</type></node><node><value>\Vo\DateRange</value><id>_DateRange.html#\Vo\DateRange</id><type>class</type></node><node><value>\Vo\DateRange::FUTURE</value><id>_DateRange.html#\Vo\DateRange::FUTURE</id><type>constant</type></node><node><value>\Vo\DateRange::PAST</value><id>_DateRange.html#\Vo\DateRange::PAST</id><type>constant</type></node><node><value>\Vo\DateRange::$start</value><id>_DateRange.html#\Vo\DateRange::$start</id><type>property</type></node><node><value>\Vo\DateRange::$end</value><id>_DateRange.html#\Vo\DateRange::$end</id><type>property</type></node><node><value>\Vo\DateRange::__construct()</value><id>_DateRange.html#\Vo\DateRange::__construct()</id><type>method</type></node><node><value>\Vo\DateRange::fromIso8601()</value><id>_DateRange.html#\Vo\DateRange::fromIso8601()</id><type>method</type></node><node><value>\Vo\DateRange::fromData()</value><id>_DateRange.html#\Vo\DateRange::fromData()</id><type>method</type></node><node><value>\Vo\DateRange::infinite()</value><id>_DateRange.html#\Vo\DateRange::infinite()</id><type>method</type></node><node><value>\Vo\DateRange::upTo()</value><id>_DateRange.html#\Vo\DateRange::upTo()</id><type>method</type></node><node><value>\Vo\DateRange::startingOn()</value><id>_DateRange.html#\Vo\DateRange::startingOn()</id><type>method</type></node><node><value>\Vo\DateRange::getStart()</value><id>_DateRange.html#\Vo\DateRange::getStart()</id><type>method</type></node><node><value>\Vo\DateRange::getEnd()</value><id>_DateRange.html#\Vo\DateRange::getEnd()</id><type>method</type></node><node><value>\Vo\DateRange::isEmpty()</value><id>_DateRange.html#\Vo\DateRange::isEmpty()</id><type>method</type></node><node><value>\Vo\DateRange::equals()</value><id>_DateRange.html#\Vo\DateRange::equals()</id><type>method</type></node><node><value>\Vo\DateRange::includes()</value><id>_DateRange.html#\Vo\DateRange::includes()</id><type>method</type></node><node><value>\Vo\DateRange::overlaps()</value><id>_DateRange.html#\Vo\DateRange::overlaps()</id><type>method</type></node><node><value>\Vo\DateRange::gap()</value><id>_DateRange.html#\Vo\DateRange::gap()</id><type>method</type></node><node><value>\Vo\DateRange::abuts()</value><id>_DateRange.html#\Vo\DateRange::abuts()</id><type>method</type></node><node><value>\Vo\DateRange::diff()</value><id>_DateRange.html#\Vo\DateRange::diff()</id><type>method</type></node><node><value>\Vo\DateRange::isContiguous()</value><id>_DateRange.html#\Vo\DateRange::isContiguous()</id><type>method</type></node><node><value>\Vo\DateRange::getSeriesStart()</value><id>_DateRange.html#\Vo\DateRange::getSeriesStart()</id><type>method</type></node><node><value>\Vo\DateRange::getSeriesEnd()</value><id>_DateRange.html#\Vo\DateRange::getSeriesEnd()</id><type>method</type></node><node><value>\Vo\DateRange::compareTo()</value><id>_DateRange.html#\Vo\DateRange::compareTo()</id><type>method</type></node><node><value>\Vo\DateRange::__toString()</value><id>_DateRange.html#\Vo\DateRange::__toString()</id><type>method</type></node><node><value>\Vo\Ip</value><id>_Ip.html#\Vo\Ip</id><type>class</type></node><node><value>\Vo\Ip::$ip</value><id>_Ip.html#\Vo\Ip::$ip</id><type>property</type></node><node><value>\Vo\Ip::$version</value><id>_Ip.html#\Vo\Ip::$version</id><type>property</type></node><node><value>\Vo\Ip::__construct()</value><id>_Ip.html#\Vo\Ip::__construct()</id><type>method</type></node><node><value>\Vo\Ip::fromIntegerArray()</value><id>_Ip.html#\Vo\Ip::fromIntegerArray()</id><type>method</type></node><node><value>\Vo\Ip::format()</value><id>_Ip.html#\Vo\Ip::format()</id><type>method</type></node><node><value>\Vo\Ip::toIntegerArray()</value><id>_Ip.html#\Vo\Ip::toIntegerArray()</id><type>method</type></node><node><value>\Vo\Ip::isInNetwork()</value><id>_Ip.html#\Vo\Ip::isInNetwork()</id><type>method</type></node><node><value>\Vo\Ip::getVersion()</value><id>_Ip.html#\Vo\Ip::getVersion()</id><type>method</type></node><node><value>\Vo\Ip::__toString()</value><id>_Ip.html#\Vo\Ip::__toString()</id><type>method</type></node></nodes>
